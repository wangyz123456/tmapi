<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.tmapi.dao.master.PurchaseItemBakDao">

    <select id="querySumAmountTodayById" resultType="com.example.tmapi.entity.PurchaseItemBak" parameterType="com.example.tmapi.entity.PurchaseItemBak" >
        SELECT SUM (Amount) as todaySumAmount
        FROM
        purchaseItemBak p
        LEFT JOIN POSSeller s ON p.SellerID = s.SellerName
        WHERE
        1 = 1
        <if test="purchaseItemBak.storeId != null">
            and p.StoreId = #{purchaseItemBak.storeId}
        </if>
        <if test="purchaseItemBak.storeId != null">
            and s.StoreId = #{purchaseItemBak.storeId}
        </if>
        <if test="purchaseItemBak.sellerId != null">
            and s.SellerID = #{purchaseItemBak.sellerId}
        </if>
        <if test="purchaseItemBak.startDate != null">
            and p.BuyDate = #{purchaseItemBak.startDate}
        </if>


    </select>


    <select id="queryByStoreId" resultType="com.example.tmapi.entity.PurchaseItemBak" parameterType="com.example.tmapi.entity.PurchaseItemBak">
        SELECT
            StoreId as storeId,
            SUM(Amount) as todaySumAmount,
            sum(Qty * StockPrice) as saleCost,
            sum(Amount-Qty * StockPrice) as sumProfit

        FROM
            PurchaseItemBak
        WHERE 1=1
        <if test="purchaseItemBak.startDate != null">
            and  BuyDate = #{purchaseItemBak.startDate}
        </if>
        <if test="purchaseItemBak.storeId != null">
            and StoreID = #{purchaseItemBak.storeId}
        </if>
        <if test="purchaseItemBak.sellerId != null">
            and  SellerID = #{purchaseItemBak.sellerId}
        </if>
        GROUP BY
            StoreID

    </select>


    <select id="queryByDate"  resultType="com.example.tmapi.entity.PurchaseItemBak" parameterType="com.example.tmapi.entity.PurchaseItemBak">
        SELECT
          StoreID as storeId,
          GoodsID as goodsId,
          SUM (qty) as qty

        FROM
            PurchaseItemBak
        where  BuyDate >= #{purchaseItemBak.startDate}
        GROUP BY StoreID,GoodsID
    </select>


    <select id="queryByDateTime"  resultType="com.example.tmapi.entity.PurchaseItemBak" parameterType="com.example.tmapi.entity.PurchaseItemBak">
       SELECT
            i.StoreID as storeId,
            s.StoreName as storeName,
            i.GoodsID as goodsId,
            LEFT(g.Name,8)as name,
            i.SellerID as sellerId,
            i.Qty as qty,
            i.Price as price,
            i.OldPrice as oldPrice,
            i.Amount as amount,
            i.BuyDate as buyDate,
            p.BuyTime as buyTime
        FROM
            PurchaseItemBak i,
            PurchaseBak p,
            Goods g,
            Stores s
        where i.StoreID = p.StoreID
         and i.BuyDate = p.BuyDate
        and i.MachID = p.MachID
        and i.ReceiptID = p.ReceiptID
        and i.Qty>0
        and i.StoreID = s.StoreID
        and i.GoodsID = g.GoodsID
        and p.BuyDate= #{purchaseItemBak.startDate}
        and p.BuyTime >= #{purchaseItemBak.startTime}
        ORDER BY i.StoreID
    </select>
</mapper>